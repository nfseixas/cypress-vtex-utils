{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://cypress-vtex-utils/webpack/bootstrap","webpack://cypress-vtex-utils/webpack/runtime/make namespace object","webpack://cypress-vtex-utils/./src/utils/StringUtils.ts","webpack://cypress-vtex-utils/./src/commands.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export class StringUtils {\n  public static isString(value: unknown): value is string {\n    return typeof value === 'string';\n  }\n\n  public static toRegexSource(pattern: RegExp | string): string {\n    return this.isString(pattern) ? pattern : pattern.source;\n  }\n\n  public static toRegex(pattern: RegExp | string): RegExp {\n    return this.isString(pattern) ? new RegExp(pattern) : pattern;\n  }\n\n  public static dirname(path: string): string {\n    const normalizedPath = this.removeTrailingSlash(path);\n    const fileNameIdx = this.fileNameIdx(normalizedPath);\n    const dirname = normalizedPath.substring(0, fileNameIdx);\n\n    return this.removeTrailingSlash(dirname);\n  }\n\n  public static normalizeName(\n    path: string,\n    options?: { ext?: string }\n  ): string {\n    const fileNameIdx = this.fileNameIdx(path);\n    const name = this.removeLeadingSlash(path.substring(fileNameIdx));\n\n    const extIdx = name.lastIndexOf('.');\n\n    let ext: string | undefined;\n    let nameWithoutExt = name;\n\n    if (extIdx >= 0) {\n      ext = options?.ext ?? name.substring(extIdx);\n      nameWithoutExt = name.substring(0, extIdx);\n    }\n\n    return `${nameWithoutExt}${ext ?? '.har'}`;\n  }\n\n  public static escapeCharacters(\n    str: string,\n    chars: string = '^[]{}()\\\\\\\\.$*+?|'\n  ): string {\n    let foundChar = false;\n\n    const length = chars.length;\n\n    for (let i = 0; i < length; ++i) {\n      if (str.indexOf(chars.charAt(i)) !== -1) {\n        foundChar = true;\n        break;\n      }\n    }\n\n    if (!foundChar) {\n      return str;\n    }\n\n    let result = '';\n\n    for (let j = 0; j < str.length; ++j) {\n      if (chars.indexOf(str.charAt(j)) !== -1) {\n        result += '\\\\';\n      }\n\n      result += str.charAt(j);\n    }\n\n    return result;\n  }\n\n  private static fileNameIdx(path: string): number {\n    return path.indexOf('\\\\') >= 0\n      ? path.lastIndexOf('\\\\')\n      : path.lastIndexOf('/');\n  }\n\n  private static removeLeadingSlash(path: string): string {\n    return path.replace(/^\\/|^\\\\/, '');\n  }\n\n  private static removeTrailingSlash(path: string): string {\n    return path.replace(/\\/+$|\\\\+$/, '');\n  }\n}\n","import { StringUtils } from './utils/StringUtils';\nimport type { RecordOptions, SaveOptions } from './Plugin';\n\nCypress.Commands.add(\n  'recordHar',\n  (options?: Partial<RecordOptions>): Cypress.Chainable =>\n    cy.task('recordHar', {\n      content: true,\n      includeBlobs: true,\n      rootDir: StringUtils.dirname(Cypress.spec.absolute),\n      ...options,\n      excludePaths: options?.excludePaths?.map(x =>\n        StringUtils.toRegexSource(x)\n      ),\n      includeHosts: options?.includeHosts?.map(x =>\n        StringUtils.toRegexSource(x)\n      )\n    })\n);\n\nCypress.Commands.add(\n  'recordHarConsole',\n  (options?: Partial<RecordOptions>): Cypress.Chainable =>\n    cy.task('recordHarConsole', {\n      content: true,\n      includeBlobs: true,\n      rootDir: StringUtils.dirname(Cypress.spec.absolute),\n      ...options,\n      excludePaths: options?.excludePaths?.map(x =>\n        StringUtils.toRegexSource(x)\n      ),\n      includeHosts: options?.includeHosts?.map(x =>\n        StringUtils.toRegexSource(x)\n      )\n    })\n);\n\nCypress.Commands.add(\n  'saveHar',\n  (options?: Partial<SaveOptions>): Cypress.Chainable => {\n    const fallbackFileName = Cypress.spec.name;\n    const outDir = (Cypress.env('hars_folders') as string) ?? './';\n\n    return cy.task('saveHar', {\n      outDir,\n      ...options,\n      fileName: StringUtils.normalizeName(\n        options?.fileName ?? fallbackFileName,\n        !options?.fileName ? { ext: '.har' } : undefined\n      )\n    });\n  }\n);\n\nCypress.Commands.add(\n  'disposeOfHar',\n  (): Cypress.Chainable => cy.task('disposeOfHar')\n);\n\nCypress.Commands.add(\n  'saveConsole',\n  (options?: Partial<SaveOptions>): Cypress.Chainable => {\n    const fallbackFileName = Cypress.spec.name;\n    const outDir = (Cypress.env('hars_folders') as string) ?? './';\n\n    return cy.task('saveConsole', {\n      outDir,\n      ...options,\n      fileNameConsole: StringUtils.normalizeName(\n        options?.fileName ?? fallbackFileName,\n        !options?.fileName ? { ext: '.txt' } : undefined\n      )\n    });\n  }\n);"],"names":["exports","Symbol","toStringTag","Object","defineProperty","value","StringUtils","static","pattern","this","isString","source","RegExp","path","normalizedPath","removeTrailingSlash","fileNameIdx","dirname","substring","options","name","removeLeadingSlash","extIdx","lastIndexOf","ext","nameWithoutExt","str","chars","foundChar","length","i","indexOf","charAt","result","j","replace","Cypress","Commands","add","cy","task","content","includeBlobs","rootDir","spec","absolute","excludePaths","map","x","toRegexSource","includeHosts","fallbackFileName","outDir","env","fileName","normalizeName","undefined","fileNameConsole"],"sourceRoot":""}